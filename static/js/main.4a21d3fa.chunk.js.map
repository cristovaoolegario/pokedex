{"version":3,"sources":["components/PokemonCard/PokemonCard.js","assets/not-found.gif","components/NotFoundCard/NotFoundCard.js","services/pokeApi.js","assets/pokeball.svg","App.js","reportWebVitals.js","index.js"],"names":["PokemonCard","pokemon","className","name","src","sprites","versions","animated","front_default","alt","height","weight","types","type","id","defaultProps","NotFoundCard","error","confusedPikachu","baseURL","getPokemonByIdOrName","typedPokemon","a","axios","get","response","data","App","useState","setPokemon","setError","isLoading","setIsLoading","setTypedPokemon","event","preventDefault","onSubmit","value","placeholder","onChange","target","pokeball","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wQAIMA,EAAc,SAAC,GAAD,MAAGC,EAAH,EAAGA,QAAH,OAClB,sBAAKC,UAAU,cAAf,UACE,sBAAKA,UAAU,uBAAf,UACE,oBAAIA,UAAU,cAAd,SAA6BD,EAAQE,OACrC,qBACED,UAAU,gBACVE,IAAG,UACDH,EAAQI,QAAQC,SAAS,gBAAgB,eAAeC,SACrDC,qBAFF,QAGDP,EAAQI,QAAQC,SAAS,gBAAgB,eAAeE,cAE1DC,IAAKR,EAAQE,UAGjB,sBAAKD,UAAU,iBAAf,UACE,iCACE,4CADF,KAC6C,GAAjBD,EAAQS,OADpC,SAGA,iCACE,4CADF,KAC4BT,EAAQU,OAAS,GAD7C,SAGA,iCACE,0CADF,KAC0BV,EAAQW,MAAM,GAAGC,KAAKV,QAEhD,iCACE,wCADF,KACwBF,EAAQa,WAxBFb,EAAQa,KA+B5Cd,EAAYe,aAAe,GAEZf,QCtCA,MAA0B,sCCInCgB,EAAe,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACtB,OACE,sBAAKf,UAAU,cAAf,UACE,4BACE,iCAASe,MAEX,qBAAKb,IAAKc,EAAiBT,IAAI,oBAMrCO,EAAaD,aAAe,GAEbC,Q,iBChBTG,EAAU,4B,SAEDC,E,8EAAf,WAAoCC,GAApC,eAAAC,EAAA,+EAEyBC,IAAMC,IAAN,UAAaL,EAAb,oBAAgCE,IAFzD,cAEQI,EAFR,yBAGWA,EAASC,MAHpB,yDAKW,gCALX,0D,gCCJe,MAA0B,qCCmE1BC,EA5DH,WAAO,IAAD,EACcC,mBAAS,MADvB,mBACT3B,EADS,KACA4B,EADA,OAEUD,mBAAS,MAFnB,mBAETX,EAFS,KAEFa,EAFE,OAGkBF,oBAAS,GAH3B,mBAGTG,EAHS,KAGEC,EAHF,OAIwBJ,mBAAS,IAJjC,mBAITP,EAJS,KAIKY,EAJL,iDAUhB,WAA4BC,GAA5B,eAAAZ,EAAA,yDACEY,EAAMC,iBACDd,EAFP,wDAKEW,GAAa,GALf,SAOsBZ,EAAqBC,GAP3C,OASyB,kBAFnBpB,EAPN,SAUI6B,EAAS7B,GACT4B,EAAW,QAEXA,EAAW5B,GACX6B,EAAS,OAEXE,GAAa,GAhBf,4CAVgB,sBA6BhB,OACE,sBAAK9B,UAAU,MAAf,UACE,yDACA,mBAAGA,UAAU,eAAb,+CACA,uBAAMA,UAAU,OAAOkC,SAjCX,4CAiCZ,UACE,uBACElC,UAAU,QACVmC,MAAOhB,EACPiB,YAAY,wBACZC,SAhCR,SAAsBL,GACpBD,EAAgBC,EAAMM,OAAOH,UAiCzB,wBAAQnC,UAAU,eAAeW,KAAK,SAAtC,SACGkB,EACC,sDAEA,8CACS,IACP,qBAAK7B,UAAU,aAAaE,IAAKqC,EAAUhC,IAAI,aAAc,YAKpER,EACC,cAAC,EAAD,CAAaA,QAASA,IAEtBgB,GAAS,cAAC,EAAD,CAAcA,MAAOA,QCjDvByB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.4a21d3fa.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./PokemonCard.css\";\nimport \"../GenericCard.css\";\n\nconst PokemonCard = ({ pokemon }) => (\n  <div className=\"GenericCard\" key={pokemon.id}>\n    <div className=\"PokemonAvatarWrapper\">\n      <h2 className=\"PokemonName\">{pokemon.name}</h2>\n      <img\n        className=\"PokemonAvatar\"\n        src={\n          pokemon.sprites.versions[\"generation-v\"][\"black-white\"].animated\n            .front_default ??\n          pokemon.sprites.versions[\"generation-v\"][\"black-white\"].front_default\n        }\n        alt={pokemon.name}\n      />\n    </div>\n    <div className=\"PokemonDetails\">\n      <span>\n        <strong>Height</strong>: {pokemon.height * 10} cm\n      </span>\n      <span>\n        <strong>Weight</strong>: {pokemon.weight / 10} kg\n      </span>\n      <span>\n        <strong>Type</strong>: {pokemon.types[0].type.name}\n      </span>\n      <span>\n        <strong>id</strong>: {pokemon.id}\n      </span>\n    </div>\n  </div>\n);\n\nPokemonCard.propTypes = {};\nPokemonCard.defaultProps = {};\n\nexport default PokemonCard;\n","export default __webpack_public_path__ + \"static/media/not-found.7a3a86d7.gif\";","import React from \"react\";\nimport confusedPikachu from \"../../assets/not-found.gif\";\nimport \"../GenericCard.css\";\n\nconst NotFoundCard = ({ error }) => {\n  return (\n    <div className=\"GenericCard\">\n      <p>\n        <strong>{error}</strong>\n      </p>\n      <img src={confusedPikachu} alt=\"notFoundImg\" />\n    </div>\n  );\n};\n\nNotFoundCard.propTypes = {};\nNotFoundCard.defaultProps = {};\n\nexport default NotFoundCard;\n","import axios from \"axios\";\n\nconst baseURL = \"https://pokeapi.co/api/v2\";\n\nasync function getPokemonByIdOrName(typedPokemon) {\n  try {\n    let response = await axios.get(`${baseURL}/pokemon/${typedPokemon}`);\n    return response.data;\n  } catch (error) {\n    return \"Pokémon não encontrado\";\n  }\n}\n\nexport { getPokemonByIdOrName };\n","export default __webpack_public_path__ + \"static/media/pokeball.e57f7ae6.svg\";","import React, { useState } from \"react\";\nimport PokemonCard from \"./components/PokemonCard/PokemonCard\";\nimport NotFoundCard from \"./components/NotFoundCard/NotFoundCard\";\nimport { getPokemonByIdOrName } from \"./services/pokeApi\";\nimport \"./App.css\";\nimport pokeball from \"./assets/pokeball.svg\";\n\nconst App = () => {\n  const [pokemon, setPokemon] = useState(null);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [typedPokemon, setTypedPokemon] = useState(\"\");\n\n  function handleChange(event) {\n    setTypedPokemon(event.target.value);\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    if (!typedPokemon) {\n      return;\n    }\n    setIsLoading(true);\n\n    let pokemon = await getPokemonByIdOrName(typedPokemon);\n\n    if (typeof pokemon === \"string\") {\n      setError(pokemon);\n      setPokemon(null);\n    } else {\n      setPokemon(pokemon);\n      setError(null);\n    }\n    setIsLoading(false);\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Bem vindo à Pokedex!</h1>\n      <p className=\"Instructions\">Digite o nome ou a ID do pokemon!</p>\n      <form className=\"Form\" onSubmit={handleSubmit}>\n        <input\n          className=\"Input\"\n          value={typedPokemon}\n          placeholder=\"Nome ou ID do pokemon\"\n          onChange={handleChange}\n        ></input>\n        <button className=\"SearchButton\" type=\"submit\">\n          {isLoading ? (\n            <>Carregando....</>\n          ) : (\n            <>\n              Buscar{\" \"}\n              <img className=\"ButtonIcon\" src={pokeball} alt=\"pokeball\" />{\" \"}\n            </>\n          )}\n        </button>\n      </form>\n      {pokemon ? (\n        <PokemonCard pokemon={pokemon} />\n      ) : (\n        error && <NotFoundCard error={error} />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}