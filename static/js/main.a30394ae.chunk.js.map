{"version":3,"sources":["components/PokemonCard/PokemonCard.js","assets/not-found.gif","components/NotFoundCard/NotFoundCard.js","services/pokeApi.js","assets/pokeball.svg","App.js","reportWebVitals.js","i18n/config.js","index.js"],"names":["PokemonCard","pokemon","t","useTranslation","className","name","src","sprites","versions","animated","front_default","alt","height","weight","types","type","id","defaultProps","NotFoundCard","error","confusedPikachu","baseURL","getPokemonByIdOrName","typedPokemon","a","axios","get","response","data","App","useState","setPokemon","setError","isLoading","setIsLoading","setTypedPokemon","event","preventDefault","toLowerCase","onSubmit","value","placeholder","onChange","target","pokeball","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","i18n","use","XHR","initReactI18next","LanguageDetector","init","fallbackLng","detection","order","lookupQuerystring","resources","en","translations","require","ns","defaultNS","languages","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a30394ae.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./PokemonCard.css\";\nimport \"../GenericCard.css\";\nimport { useTranslation } from \"react-i18next\";\n\nconst PokemonCard = ({ pokemon }) => {\n  const { t } = useTranslation();\n  return (\n    <div className=\"GenericCard\" key={pokemon.id}>\n      <div className=\"PokemonAvatarWrapper\">\n        <h2 className=\"PokemonName\">{pokemon.name}</h2>\n        <img\n          className=\"PokemonAvatar\"\n          src={\n            pokemon.sprites.versions[\"generation-v\"][\"black-white\"].animated\n              .front_default ??\n            pokemon.sprites.versions[\"generation-v\"][\"black-white\"]\n              .front_default\n          }\n          alt={pokemon.name}\n        />\n      </div>\n      <div className=\"PokemonDetails\">\n        <span>\n          <strong>{t(\"height\")}</strong>: {pokemon.height * 10} cm\n        </span>\n        <span>\n          <strong>{t(\"weight\")}</strong>: {pokemon.weight / 10} kg\n        </span>\n        <span>\n          <strong>{t(\"type\")}</strong>: {pokemon.types[0].type.name}\n        </span>\n        <span>\n          <strong>{t(\"id\")}</strong>: {pokemon.id}\n        </span>\n      </div>\n    </div>\n  );\n};\n\nPokemonCard.propTypes = {};\nPokemonCard.defaultProps = {};\n\nexport default PokemonCard;\n","export default __webpack_public_path__ + \"static/media/not-found.7a3a86d7.gif\";","import React from \"react\";\nimport confusedPikachu from \"../../assets/not-found.gif\";\nimport \"../GenericCard.css\";\nimport { useTranslation } from \"react-i18next\";\n\nconst NotFoundCard = ({ error }) => {\n  const { t } = useTranslation();\n  return (\n    <div className=\"GenericCard\">\n      <p>\n        <strong>{t(error)}</strong>\n      </p>\n      <img src={confusedPikachu} alt=\"notFoundImg\" />\n    </div>\n  );\n};\n\nNotFoundCard.propTypes = {};\nNotFoundCard.defaultProps = {};\n\nexport default NotFoundCard;\n","import axios from \"axios\";\n\nconst baseURL = \"https://pokeapi.co/api/v2\";\n\nasync function getPokemonByIdOrName(typedPokemon) {\n  try {\n    let response = await axios.get(`${baseURL}/pokemon/${typedPokemon}`);\n    return response.data;\n  } catch (error) {\n    return \"not-found-pokemon\";\n  }\n}\n\nexport { getPokemonByIdOrName };\n","export default __webpack_public_path__ + \"static/media/pokeball.e57f7ae6.svg\";","import React, { useState } from \"react\";\nimport PokemonCard from \"./components/PokemonCard/PokemonCard\";\nimport NotFoundCard from \"./components/NotFoundCard/NotFoundCard\";\nimport { getPokemonByIdOrName } from \"./services/pokeApi\";\nimport \"./App.css\";\nimport pokeball from \"./assets/pokeball.svg\";\nimport { useTranslation } from \"react-i18next\";\n\nconst App = () => {\n  const { t } = useTranslation();\n  const [pokemon, setPokemon] = useState(null);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [typedPokemon, setTypedPokemon] = useState(\"\");\n\n  function handleChange(event) {\n    setTypedPokemon(event.target.value);\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n    if (!typedPokemon) {\n      return;\n    }\n    setIsLoading(true);\n\n    let pokemon = await getPokemonByIdOrName(typedPokemon.toLowerCase());\n\n    if (typeof pokemon === \"string\") {\n      setError(pokemon);\n      setPokemon(null);\n    } else {\n      setPokemon(pokemon);\n      setError(null);\n    }\n    setIsLoading(false);\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>{t(\"welcome\")}</h1>\n      <p className=\"Instructions\">{t(\"instructions\")}</p>\n      <form className=\"Form\" onSubmit={handleSubmit}>\n        <input\n          className=\"Input\"\n          value={typedPokemon}\n          placeholder={t(\"input\")}\n          onChange={handleChange}\n        ></input>\n        <button className=\"SearchButton\" type=\"submit\">\n          {isLoading ? (\n            <>{t(\"loading\")}</>\n          ) : (\n            <>\n              {t(\"search\")}{\" \"}\n              <img className=\"ButtonIcon\" src={pokeball} alt=\"pokeball\" />{\" \"}\n            </>\n          )}\n        </button>\n      </form>\n      {pokemon ? (\n        <PokemonCard pokemon={pokemon} />\n      ) : (\n        error && <NotFoundCard error={error} />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\nimport XHR from \"i18next-http-backend\";\n\nconst options = {\n  order: [\"querystring\", \"navigator\"],\n  lookupQuerystring: \"lng\",\n};\n\ni18n\n  .use(XHR)\n  .use(initReactI18next)\n  .use(LanguageDetector)\n  .init({\n    fallbackLng: \"en\",\n    detection: options,\n    resources: {\n      en: {\n        translations: require(\"./locales/en/translations.json\"),\n      },\n      \"pt-BR\": {\n        translations: require(\"./locales/pt-BR/translations.json\"),\n      },\n    },\n    ns: [\"translations\"],\n    defaultNS: \"translations\",\n  });\n\ni18n.languages = [\"en\", \"pt-BR\"];\n\nexport default i18n;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./i18n/config\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}